USAGE: 
$ cd src
$ make

Le fichier main.c permet de lancer les fonctions de test/debug de mini_memory.c, mini_string.c et mini_io.c.
Le fichier debug.c contient des fonctions annexes au TP permettant de debugger les fonctions. Il contient par exemple
print_malloc_list() qui permet d'afficher l'etat de la memoire. 

Le mini_shell est fonctionnel et utilise toutes les fonctions implémenté durant le TP.
Il peut être utilisé via : 

$ ./mini_shell

Exemple d'utilisation :

$ ./mini_shell
$ cat file.txt
...
$ echo Hello World!
...
$ tail -n 3 file.txt
...
$ exit

Le TP est également dispo sur: https://github.com/tomhodemon/TP_MINIGLIBC

Exercice 5 : 
Cela évite les fuites de mémoire. En effet, free ne reinitialise pas la mémoire du block à zero. Donc, en appelant calloc on s'assure que le block mémoire 
dernièrement alloué est reinitialisé avec des zeros. Il est plus sécure d'utiliser calloc que malloc.

Exercice 6 : 
La fonction free indique au programme que le bloc mémoire passé en paramètre est de nouveau allouable/utilisable. 
L'espace est disponible pour être alloué de nouveau.

Exercice 17 : 
Rien n'est affiché sur la sortie standard. Il reste à gérer le cas où la chaîne de caractère à afficher est de taille inférieur au tampon et ne contient
pas de '\n' (dans ce cas, write n'est pas appelé).

Exercice 22 : 
Si les chaînes de caractères sont mal définie on peut avoir des fuites de mémoires.
Dans mini_strcpy, si la taille de la chaîne de destination est trop petite, on peut s'attendre à des comportements indésirables.

Exercice 34 : 
Il reste des données dans buffer_read. La fonction mini_fwrite est imcomplète. Il faut "forcer" l'écriture avec mini_fflush.